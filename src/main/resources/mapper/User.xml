<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.li.librarymanagement.mapper.UserMapper">

    <insert id="save">
        insert into user(name, username, password, age, sex, phone, address, account,role)
        values(#{name}, #{username}, #{password}, #{age}, #{sex}, #{phone}, #{address}, #{account},#{role})
    </insert>

    <update id="updateById">
        update user set name = #{name}, password = #{password}, age = #{age}, sex = #{sex}, phone = #{phone}, academy = #{academy}, speciality=#{speciality}, classes=#{classes},  address = #{address}, account = #{account}, status = #{status},
        updatetime = #{updatetime}, role = #{role} where id = #{id}
    </update>

    <delete id="deleteById">
        delete from user where id = #{id}
    </delete>

    <select id="list" resultType="com.li.librarymanagement.entity.User">
        select user.* , role.rolename from user INNER JOIN role ON user.role = role.id
    </select>

    <select id="listByCondition" resultType="com.li.librarymanagement.entity.User">
        select user.* , role.rolename from user INNER JOIN role ON user.role = role.id
            <where>
                <if test="name != null and name != ''">
                    user.name like concat('%', #{ name }, '%')
                </if>
                <if test="phone != null and phone != ''">
                    and user.phone  like concat('%', #{ phone }, '%')
                </if>
                <if test="classes != null and classes != ''">
                    and user.classes  like concat('%', #{ classes }, '%')
                </if>
            </where>
        order by id desc
    </select>

    <select id="getById" resultType="com.li.librarymanagement.entity.User">
        select * from user where id = #{id}
    </select>

    <select id="getByUsername" resultType="com.li.librarymanagement.entity.User">
        select user.* , roles.rolepath from user INNER JOIN roles ON user.role = roles.id where user.username = #{username}
    </select>

    <select id="getByLoginname" resultType="com.li.librarymanagement.entity.User">
        select user.* , roles.rolepath from user INNER JOIN roles ON user.role = roles.id where user.loginname = #{loginname}
    </select>

</mapper>